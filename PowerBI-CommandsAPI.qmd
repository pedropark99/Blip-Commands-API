---
title: "Conectando o Power BI com o Blip Commands API"
author: "Pedro Duarte Faria"
format: revealjs
execute:
  echo: true
---

```{python configs}
#| include: false
exec(open("../../botKey.py").read())
exec(open("src/APICommands.py").read())
```



## Objetivo

Demonstrar como podemos conectar o Power BI ao Blip Commands API.


## O que √© o Blip Commands API?

√â uma API do Blip que disponibiliza dados de seu contato inteligente em **tempo real**.


## Consequ√™ncia

Podemos utilizar o Commands API para servir aos nossos clientes os dados mais recentes. Ou seja, n√£o precisamos **esperar o dia seguinte para termos acesso aos dados do dia atual**.


## Fluxo de dados

![](Figuras/PowerPoint/fluxo-dados.png)

## Temos uma biblioteca nova! ü•≥

Para facilitar o acesso aos dados da Commands API, duas fun√ß√µes foram desenvolvidas para os APIN's:

- `get_event_track()`;
- `get_attendants_report()`;


## Importando as fun√ß√µes

Adicione o seguinte c√≥digo ao seu notebook do Databricks:

```{verbatim}
%run /Library/APICommands
```

Mas antes de utilizar as fun√ß√µes, voc√™ precisa coletar a chave de autentica√ß√£o de seu bot no Blip!

## Todo acesso precisa ser autenticado!

Todo acesso √† Commands API precisa de uma chave de autentica√ß√£o! Voc√™ encontra essa chave de autentica√ß√£o na p√°gina de seu bot no Blip Portal. 

Basta acessar a √°rea de "Configura√ß√µes -> Informa√ß√µes de conex√£o", e, copiar o valor do quadro "Cabe√ßalho de autentica√ß√£o".


## Todo acesso precisa ser autenticado!

![](Figuras/info-conexao.png)

## Chave de autentica√ß√£o

Toda chave de autentica√ß√£o √© iniciada por `"Key "`, seguido de um conjunto aleat√≥rio de caracteres. Nos pr√≥ximos slides, vou me refereir a essa chave atrav√©s da vari√°vel `botKey`.

```{python}
#| eval: false
botKey = 'Key cq936dk_hxdd00_sa...'
```


## `get_event_track()`

Essa fun√ß√£o possui os seguintes argumentos:

- `botKey`: a chave de autentica√ß√£o;
- `tracking`: o nome do tracking;
- `startDate`: a data de in√≠cio da pesquisa;
- `endDate`: a data de fim da pesquisa;
- `take` (**opcional**): quantidade m√°xima de resultados que voc√™ deseja trazer;
- `action` (**opcional**): a action espec√≠fica que voc√™ deseja pesquisar;


## Exemplos:

```{python}
#| eval: true
from datetime import date
dia_pesquisa = date(2022,1,11)
r = get_event_track(
  botKey, tracking = "Saudacao sodexo selecao",
  startDate = dia_pesquisa, endDate = dia_pesquisa
)

print(r)
```




## Construindo uma requisi√ß√£o

Para acessar os recursos de uma API, voc√™ precisa enviar uma requisi√ß√£o HTTP para essa API. Essa requisi√ß√£o √© em geral composta por tr√™s partes:

- Body;
- Header;
- QueryString;


## Construindo uma QueryString





